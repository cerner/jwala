paths.web-archive=../data/archives
paths.resource-templates=../data/templates
paths.generated.resource.dir=../data/generated

#TODO: this should be gone and use what's defined in the web server
remote.paths.httpd.conf=#REQUIRED#
remote.paths.apache.httpd=#REQUIRED#
jwala.apache.httpd.zip.name=apache-httpd-2.4.20.zip
remote.paths.httpd.root.dir.name=apache-httpd-2.4.20

remote.paths.instances=#REQUIRED#

remote.tomcat.service.exe=tomcat7
remote.tomcat.dir.name=apache-tomcat-7.0.55
jwala.tomcat.zip.name=apache-tomcat-7.0.55-windows-x64.zip

remote.paths.deploy.dir=#REQUIRED#
remote.commands.user-scripts=~/.jwala

ssh.userName=#REQUIRED#
ssh.encrypted.password=#REQUIRED#

active.directory.fqdn=#REQUIRED#
active.directory.domain=#REQUIRED#
active.directory.server.name=#REQUIRED#
active.directory.server.port=389
active.directory.server.protocol=ldap

#Authorization
jwala.authorization=true
jwala.role.admin=Jwala Administrator

remote.jwala.data.dir=#REQUIRED#
remote.jwala.webapps.dir=#REQUIRED#

jmap.dump.live.enabled=false
net.stop.sleep.time.seconds=120
commands.scripts-path=../data/scripts
remote.jwala.execution.timeout.seconds=300

ping.jvm.period.millis=120000

webserver.thread-task-executor.pool.size=100
webserver.thread-task-executor.pool.max-size=200
webserver.thread-task-executor.pool.queue-capacity=100
webserver.thread-task-executor.pool.keep-alive-sec=5

commands.concurrent.min=100
commands.concurrent.max=200
commands.concurrent.queue-capacity=200
commands.concurrent.nominal=5

#jgroups
jgroups.java.net.preferIPv4Stack=true
jgroups.coordinator.ip.address=127.0.0.1
jgroups.coordinator.port=30000
jgroups.cluster.connect.timeout=10000

jgroups.cluster.name=jwala_jgroups
jgroups.conf.xml=../conf/tcp.xml

#Enable/disable jwala functionalities
resources.enabled=true
operations.group.children.view.open=true
operations.jvm.mgr.btn.enabled=true
operations.jvm.diagnose.btn.enabled=true

#Encryption (must return String)
decryptExpression=new String(new org.apache.tomcat.util.codec.binary.Base64().decode((#stringToDecrypt).getBytes()))
encryptExpression=new String (new org.apache.tomcat.util.codec.binary.Base64().encode((#stringToEncrypt).getBytes()))

# binary distribution
jwala.binary.dir=../data/binaries
jwala.agent.dir=../data/agent

#jsch verbose logging flag
ssh.verbose=false